"""
Урок 11: Циклы for и while, основные конструкции
"""

# Цикл for
"""
Цикл for используется для перебора элементов последовательности (списка, строки, кортежа, множества или диапазона чисел).

Синтаксис:

for it is a key word, after comes peremennaya in последовательность:
    # тело цикла
    действие

Примеры использования:
"""
# Перебор элементов списка
# fruits = ["яблоко", "банан", "вишня"]
# for fruit in fruits:
#     print(fruit)  # Выведет каждый фрукт в списке

# Перебор символов строки
# for character in "Python":
#     print(character)  # Выведет каждый символ строки


# range()
"""
Функция range() генерирует последовательность чисел.

Синтаксис:
    range(start, stop, step)

- start (необязательно) - начальное значение (по умолчанию 0)
- stop - (конечное значение) (не включается в диапазон)
- step (необязательно) - шаг (по умолчанию 1)

Примеры:
"""
# print(list(range(5)))       # [0, 1, 2, 3, 4]
# print(list(range(2, 8)))    # [2, 3, 4, 5, 6, 7]
# print(list(range(1, 10, 3)))  # [1, 4, 7] example: [1, 2, 3, @4, 5, 6, @7, 8, 9] #3 each third element in range
# print(list(range(10, 0, -2)))  # [10, 8, 6, 4, 2]

# Перебор чисел с помощью range()
# for i in range(1, 6):
#     print(i)  # Выведет числа от 1 до 5

# Использование range() с шагом
# for i in range(2, 10, 2):
#     print(i)  # Выведет 2, 4, 6, 8


# Вложенные циклы
"""
Вложенные циклы позволяют перебирать при этом другую последовательность внутри.

Пример: Вывести построчно таблицу умножения до 5x5.
"""
# for i in range(1, 6):
#     for j in range(1, 6):
#         print(i * j, end="\t") #t- tap, ("/n") n- new line
#     print()  # Новая строка после каждого ряда

# for i in range(1, 5):
#     for j in range(1, 6):
#         for k in range(1, 6):
#             print(k, end="\t")
#         print()

# Цикл while
"""
Цикл while выполняется, пока заданное условие истинно.
Синтаксис:

while условие:
    # тело цикла
    действие

Пример:
"""
# x = 5
# while x > 0:
#     print(x)
#     x -= 1 #1 -step  # Уменьшаем x на 1

# x = 1
# while x < 10:
#     print(x)
#     x += 3

# got_response = False
# while not got_response:
#     print("Waiting for response...")
#     response = input("Input message: ")
#     print(response)
#     if response != " ":
#         got_response = True
#         print("Got response: ", response)

# ОЗНАКОМИТЕЛЬНЫЕ ЗАДАЧИ (10 задач)

# 1. Выведите числа от 1 до 10 с помощью for
# 2. Выведите числа от 10 до 1 с помощью while
# 3. Выведите все чётные числа от 2 до 20
# 4. Найдите сумму чисел от 1 до 100
# 5. Запросите у пользователя число и выведите его факториал
# 6. Используйте while, чтобы вывести квадраты чисел от 1 до 10
# 7. Найдите сумму всех нечётных чисел от 1 до 50
# 8. Используйте цикл for, чтобы вывести символы строки "Python"
# 9. Создайте список чисел и найдите их среднее значение
# 10. Напишите программу, которая запрашивает у пользователя числа, пока он не введёт 0


# ДОМАШНЕЕ ЗАДАНИЕ (40 задач)

# 11. Выведите таблицу умножения на 5
# 12. Выведите все числа кратные 3 от 1 до 100
# 13. Запросите у пользователя число и выведите его таблицу умножения
# 14. Найдите сумму всех чисел от 1 до N (N вводит пользователь)
# 15. Выведите числа Фибоначчи до 100
# 16. Проверьте, является ли введённое число простым
# 17. Переверните строку, введённую пользователем
# 18. Посчитайте количество гласных букв в строке
# 19. Посчитайте сумму цифр числа
# 20. Запросите у пользователя строку и выведите её без гласных
# 21. Сгенерируйте список из 10 случайных чисел и выведите их среднее значение
# 22. Определите, является ли введённая строка палиндромом
# 23. Используйте while для создания обратного отсчёта от 10 до 1
# 24. Выведите квадраты всех чётных чисел от 1 до 50
# 25. Найдите максимальное число в списке
# 26. Выведите все пары чисел от 1 до 10, сумма которых равна 10
# 27. Запросите у пользователя 5 чисел и выведите их среднее
# 28. Используйте цикл while, чтобы угадать число, загаданное программой
# 29. Сгенерируйте таблицу квадратов чисел от 1 до 10
# 30. Найдите количество чётных и нечётных чисел в списке
# 31. Определите наибольший общий делитель (НОД) двух чисел
# 32. Найдите все простые числа в диапазоне от 1 до 100
# 33. Создайте список из первых 10 чисел Фибоначчи
# 34. Подсчитайте, сколько раз встречается определённая буква в строке
# 35. Найдите сумму элементов списка, которые больше 10
# 36. Проверьте, являются ли два введённых слова анаграммами
# 37. Создайте программу, которая заменяет все пробелы в строке на подчеркивания
# 38. Определите, сколько раз в строке встречается определённое слово
# 39. Напишите программу, которая считает, сколько раз в строке встречаются цифры
# 40. Используйте цикл while, чтобы находить сумму вводимых пользователем чисел, пока он не введёт "стоп"

