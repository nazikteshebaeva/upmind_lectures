# Урок 9: Кортежи и множества — основные операции

# 1. **Что такое кортеж (tuple)**:
#    - Кортеж — это неизменяемая структура данных, аналог списка, но с фиксированным размером.
#    - Неизменяемость означает, что после создания кортеж нельзя изменить (добавить, удалить или изменить элементы).
#    - Объявление кортежей:

# my_tuple = (1, 2, 3)
# single_element_tuple = (5,)  # Обратите внимание на запятую — так создается кортеж из одного элемента

# - Доступ по индексу:
# print(my_tuple[0])  # Вывод: 1

# - Вложенные кортежи (кортежи внутри кортежей):
# nested_tuple = (1, (2, 3), (4, 5))
# print(nested_tuple[1][0])  # Вывод: 2

# - Преобразование списка в кортеж и наоборот:
# list_to_tuple = tuple([1, 2, 3])
# tuple_to_list = list((1, 2, 3))

# - Преимущества кортежей перед списками:
# - Быстрее обрабатываются, так как неизменяемы.
# - Могут использоваться как ключи в словарях (в отличие от списков).

# 2. **Основные методы кортежей**:
#    - `count(value)` — количество вхождений значения:
# my_tuple = (1, 2, 2, 3, 2)
# print(my_tuple.count(2))  # Вывод: 3

# - `index(value)` — индекс первого вхождения значения:
# print(my_tuple.index(2))  # Вывод: 1


# 3. **Что такое множество (set)**:
#    - Множество — это неупорядоченная коллекция уникальных элементов.
#    - Не допускает дубликатов и изменяемо (можно добавлять и удалять элементы).
#    - Создание множества:

# my_set = {1, 2, 3} #set is an only keys from dictionary
# my_set_from_list = set([1, 2, 3, 2]), #for exaple: set(), int(), str(), etc
# print(my_set_from_list)  # Вывод: {1, 2, 3}

# - Преобразование списка или строки в множество:
# set_from_string = set('hello') #set deletes double meanings, cuz set is unique
# print(set_from_string)  # Вывод: {'h', 'e', 'l', 'o'}

# 4. **Основные методы множеств**:
#    - `add(value)` — добавление элемента:
# my_set.add(4)
# print(my_set)  # {1, 2, 3, 4}

# - `remove(value)` — удаление элемента (ошибка, если не найден):
# my_set.remove(2)

# - `discard(value)` — удаление элемента (без ошибки, если не найден):
# my_set.discard(10)  # Ошибки не будет, даже если 10 нет в множестве

# - `pop()` — удаление случайного элемента:
# removed = my_set.pop()
# print(removed)  # Удалит и вернет случайный элемент

# - `clear()` — очистка множества:
# my_set.clear()
# print(my_set)  # Пустое множество: set()

# - `union()`, `intersection()`, `difference()`, `symmetric_difference()`:
# set1 = {1, 2, 3}
# set2 = {3, 4, 5}
# print(set1.union(set2))             # {1, 2, 3, 4, 5}
# print(set1.intersection(set2))      # {3}
# print(set1.difference(set2))        # {1, 2}
# print(set1.symmetric_difference(set2))  # {1, 2, 4, 5}

# 5. **Операции над множествами**:
#    - Проверка принадлежности:
# print(2 in set1)       # True
# print(5 not in set1)   # True

# - Подмножество и надмножество:
# subset = {1, 2}
# superset = {1, 2, 3, 4}
# print(subset < superset)   # True — subset является подмножеством superset
# print(superset > subset)   # True — superset является надмножеством subset
# print(subset <= superset)  # True — неполное или полное подмножество
# print(superset >= subset)  # True — неполное или полное надмножество

# Кортежи — это неизменяемые и быстрые структуры данных, которые используются там, где важна постоянность данных.
# Множества позволяют эффективно работать с уникальными элементами, проверять принадлежность и выполнять операции
# пересечения и объединения.
# Используйте кортежи для неизменяемых последовательностей, а множества — для уникальных коллекций элементов.


# Ознакомительные задачи:

# 1. Создай кортеж из трёх чисел и выведи сумму всех элементов.
# my_tuple = (2, 3, 4)
# print(sum(my_tuple))

# 2. Напиши программу, которая проверяет, есть ли определённое значение в кортеже.
# print(3 in my_tuple)
# print(6 in my_tuple)

# 3. Создай кортеж из строк и объедини их в одну строку через пробел.
# string_tuple = ("Nawal", "Oliver")
# print(string_tuple.join)

# 4. Создай кортеж с числами и найди максимальное и минимальное значение.
# tuple1 = (23, 34, 45, 23)
# print(max(tuple1))
# print(min(tuple1))

# 5. Преобразуй список ['apple', 'banana', 'cherry'] в кортеж.
# str1 = ["apple", "banana", "cherry"]
# print(tuple(["apple", "banana", "cherry"]))

# 6. Напиши программу, которая принимает список чисел и возвращает кортеж только из уникальных значений.
# list1 = [1, 1, 4, 5, 5, 6, 7, 7]
# print(list1)
# print(set(list1))
# print(tuple(set(list1)))

# 7. Создай множество с числами от 1 до 5 и добавь к нему число 6.
# my_set1 = {1, 2, 3, 4, 5}
# my_set1.add(6)
# print(my_set1)

# 8. Удали элемент "banana" из множества {'apple', 'banana', 'cherry'}.
# my_set2 = {"apple", "banana", "cherry"}
# my_set2.remove("banana")
# print(my_set2)

# # 9. Найди пересечение множеств {1, 2, 3} и {2, 3, 4}.
# set11 = {1, 2, 3}
# set22 = {2, 3, 4}
# print(set11.union(set22))

# 10. Определи, является ли множество {1, 2} подмножеством множества {1, 2, 3, 4}.
# subset1 = {1, 2}
# superset1 = {1, 2, 3, 4}
# print(subset1 > superset1)
# print(subset1 < superset1)


# if subset1 < superset1:
#     print("{1, 2} is subset")
# else:
#     print("Error")